labs(x = NULL,
y = "Sentiment",
title = "Kanye West's songs ranked by sentiment",
caption = "")+
scale_y_continuous(name = "", limits = c(-100,100))+
theme_minimal()+
theme(axis.text.y = element_text(size = 4.5),
axis.text.x = element_text(size = 4.5),
strip.text = element_text(size = 6)
#axis.
)+
coord_flip()
library(ggplot2)
ye_sentiment%>%
ggplot(aes(reorder(track_title, sentiment), sentiment, fill = album)) +
geom_col(show.legend = FALSE, width = 0.7) +
facet_wrap(~album, ncol= 3, scales = "free" )+
labs(x = NULL,
y = "Sentiment",
title = "Kanye West's songs ranked by sentiment",
caption = "")+
scale_y_continuous(name = "", limits = c(-100,100))+
theme_minimal()+
theme(axis.text.y = element_text(size = 4.5),
axis.text.x = element_text(size = 4.5),
strip.text = element_text(size = 6)
#axis.
)+
coord_flip()
ye_sentiment%>%
ggplot(aes(reorder(track_title, sentiment), sentiment, fill = album)) +
geom_col(show.legend = FALSE, width = 0.7) +
facet_wrap(~album, ncol= 3, scales = "free" )+
labs(x = NULL,
y = "Sentiment",
title = "Kanye West's songs ranked by sentiment",
caption = "")+
scale_y_continuous(name = "", limits = c(-50,50))+
theme_minimal()+
theme(axis.text.y = element_text(size = 4.5),
axis.text.x = element_text(size = 4.5),
strip.text = element_text(size = 6)
#axis.
)+
coord_flip()
ye_sentiment%>%
ggplot(aes(reorder(track_title, sentiment), sentiment, fill = album)) +
geom_col(show.legend = FALSE, width = 0.7) +
facet_wrap(~album, ncol= 3, scales = "free" )+
labs(x = NULL,
y = "Sentiment",
title = "Kanye West's songs ranked by sentiment",
caption = "")+
scale_y_continuous(name = "", limits = c(-100,20))+
theme_minimal()+
theme(axis.text.y = element_text(size = 4.5),
axis.text.x = element_text(size = 4.5),
strip.text = element_text(size = 6)
#axis.
)+
coord_flip()
ye_sentiment%>%
ggplot(aes(reorder(track_title, sentiment), sentiment, fill = album)) +
geom_col(show.legend = FALSE, width = 0.7) +
facet_wrap(~album, ncol= 3, scales = "free" )+
labs(x = NULL,
y = "Sentiment",
title = "Kanye West's songs ranked by sentiment",
caption = "")+
scale_y_continuous(name = "", limits = c(-100,50))+
theme_minimal()+
theme(axis.text.y = element_text(size = 4.5),
axis.text.x = element_text(size = 4.5),
strip.text = element_text(size = 6)
#axis.
)+
coord_flip()
ye_sentiment%>%
ggplot(aes(x=track_title, y=sentiment, color=album)+
geom_point()
ye_sentiment%>%
ggplot(aes(x=track_title, y=sentiment, color=album)+geom_point()
ye_sentiment%>%
ggplot(aes(x=track_title, y=sentiment, color=album)+
geom_point()
ggplot(ye_sentiment, aes(x=track_title, y=sentiment, color=album)+geom_point()
ye_sentiment%>%
ggplot(aes(x=track_title, y=sentiment, color=album))+
geom_point()
ye_sentiment
ye_sentiment <- tidy_lyrics_tok%>%
left_join(get_sentiments("bing"))%>%
count(album, track_title, sentiment)%>%
spread(sentiment, n, fill = 0)%>%
mutate(sentiment = positive - negative)%>%
mutate(sentiment_per_word = (positive - negative)/(positive+negative))
library(tidytext)
ye_sentiment <- tidy_lyrics_tok%>%
left_join(get_sentiments("bing"))%>%
count(album, track_title, sentiment)%>%
spread(sentiment, n, fill = 0)%>%
mutate(sentiment = positive - negative)%>%
mutate(sentiment_per_word = (positive - negative)/(positive+negative))
library(tidyverse)
ye_sentiment <- tidy_lyrics_tok%>%
left_join(get_sentiments("bing"))%>%
count(album, track_title, sentiment)%>%
spread(sentiment, n, fill = 0)%>%
mutate(sentiment = positive - negative)%>%
mutate(sentiment_per_word = (positive - negative)/(positive+negative))
ye_sentiment
ye_sentiment%>%sort(<NA>)
ye_sentiment%>%sort(NA)
ye_sentiment%>%sort('<NA>')
ye_sentiment$`<NA>`
order(ye_sentiment, `<NA>`)
order(ye_sentiment, album)
order(ye_sentiment)
ye_sentiment%>%order()
ye_sentiment%>%order(album)
ye_sentiment%>%order(negative)
ye_sentiment%>%arrange(positive)
ye_sentiment%>%arrange(desc(positive))
ye_sentiment%>%arrange(desc(`<NA>`))
ye_sentiment%>%
mutate(percent_match= (positive+negative)/(positive+negative+`<NA>`)*100)
ye_sentiment%>%
mutate(percent_match= (positive+negative)/(positive+negative+`<NA>`)*100)%>%
mean(percent_match)
ye_sentiment%>%
mutate(percent_match= (positive+negative)/(positive+negative+`<NA>`)*100)%>%
mean(percent_match, na.rm=TRUE)
ye_sentiment%>%
mutate(percent_match= (positive+negative)/(positive+negative+`<NA>`)*100)%>%
mean(percent_match, na.rm=TRUE)
ye_sentiment%>%
mutate(percent_match= (positive+negative)/(positive+negative+`<NA>`)*100)%>%
arrange(percent_match)
ye_sentiment
test_senti <- ye_sentiment%>%
mutate(percent_match= (positive+negative)/(positive+negative+`<NA>`)*100)
test_senti
test_senti$percent_match
mean(test_senti$percent_match)
median(test_senti$percent_match)
test_senti$percent_match
test_senti
test_senti%>%arrange(desc(percent_match))
test_sentiment <- tidy_lyrics_tok%>%
filter(album == "My Beautiful Dark Twisted Fantasy", track_n == 7)%>%
left_join(get_sentiments("bing"))%>%
test_sentiment <- tidy_lyrics_tok%>%
filter(album == "My Beautiful Dark Twisted Fantasy", track_n == 7)%>%
left_join(get_sentiments("bing"))
View(test_senti)
View(test_sentiment)
View(lyrics_tok)
tidy_lyrics_tok%>%
filter(album == "My Beautiful Dark Twisted Fantasy", track_n == 7)%>%
left_join(get_sentiments("bing"))%>%
count(album, track_title, sentiment)%>%
tidy_lyrics_tok%>%
filter(album == "My Beautiful Dark Twisted Fantasy", track_n == 7)%>%
left_join(get_sentiments("bing"))%>%
count(album, track_title, sentiment)
tidy_lyrics_tok%>%
filter(album == "808s & Heartbreak", track_n == 5)%>%
left_join(get_sentiments("bing"))
get_sentiments('nrc')
get_sentiments('nrc')$sentiment
unique(get_sentiments('nrc')$sentiment)
get_sentiments('nrc')%>%count(sentiment)
get_sentiments('nrc')[['surprise']]
get_sentiments('nrc')$sentiment[['surprise']]
get_sentiments('nrc')$sentiment['surprise']
get_sentiments('nrc')$sentiment
get_sentiments('nrc')$sentiment[]
get_sentiments('nrc')$sentiment['surprise']
get_sentiments('nrc')$sentiment["disgust"]
get_sentiments('nrc')['disgust']
get_sentiments('nrc')$sentiment['disgust']
get_sentiments('nrc')$sentiment[['disgust']]
get_sentiments('nrc')$sentiment[['disgust']]
get_sentiments('nrc')
nrc <- get_sentiments('nrc')
nrc
nrc[nrc$sentiment=='disgust']
nrc[[nrc$sentiment=='disgust']]
nrc$sentiment=='disgust'
nrc[nrc$sentiment=='disgust']
nrc%>%filter(sentiment=='disgust')
nrc%>%filter(sentiment=='surprise')
View(nrc)
nrc
nrc%sentiment
nrc$sentiment
unqiue(nrc$sentiment)
unique(nrc$sentiment)
nrc%>%filter(sentiment=='surprise', sentiment=='anticipation' )
nrc%>%filter(sentiment %in% c('anticipation', 'surprise'))
nrc%>%filter(!sentiment %in% c('anticipation', 'surprise'))
nrc%>%
filter(!sentiment %in% c('anticipation', 'surprise'))
mutate(sentiment_ = ifelse(sentiment %in% c("trust","positive","joy"),
"positive", "negative"))
nrc%>%
filter(!sentiment %in% c('anticipation', 'surprise'))%>%
mutate(sentiment_ = ifelse(sentiment %in% c("trust","positive","joy"),
"positive", "negative"))
nrc <- nrc%>%
filter(!sentiment %in% c('anticipation', 'surprise'))%>%
mutate(sentiment_ = ifelse(sentiment %in% c("trust","positive","joy"),
"positive", "negative"))%>%
select(-sentiment)
View(nrc)
ye_nrc_sentiment <- tidy_lyrics_tok%>%
left_join(nrc)%>%
count(album, track_title, sentiment_)%>%
spread(sentiment_, n, fill = 0)%>%
mutate(sentiment_ = positive - negative)%>%
mutate(sentiment_per_word = (positive - negative)/(positive+negative))
View(ye_nrc_sentiment)
nrc_senti_data<-ye_nrc_sentiment%>%
mutate(percent_match= (positive+negative)/(positive+negative+`<NA>`)*100)
View(nrc_senti_data)
mean(senti_data$percent_match)
mean(nrc_senti_data$percent_match)
median(nrc_senti_data$percent_match)
ye_nrc_sentiment$album <- factor(ye_nrc_sentiment$album, levels= unique(kw_albums$album))
ye_nrc_sentiment%>%
ggplot(aes(reorder(track_title, sentiment_), sentiment_, fill = album)) +
geom_col(show.legend = FALSE, width = 0.7) +
facet_wrap(~album, ncol= 3, scales = "free" )+
labs(x = NULL,
y = "Sentiment",
title = "Kanye West's songs ranked by sentiment",
caption = "")+
scale_y_continuous(name = "", limits = c(-100,50))+
theme_minimal()+
theme(axis.text.y = element_text(size = 4.5),
axis.text.x = element_text(size = 4.5),
strip.text = element_text(size = 6)
#axis.
)+
coord_flip()
ye_nrc_sentiment$album <- factor(ye_nrc_sentiment$album, levels= unique(kw_albums$album))
ye_nrc_sentiment%>%
ggplot(aes(reorder(track_title, sentiment_), sentiment_, fill = album)) +
geom_col(show.legend = FALSE, width = 0.7) +
facet_wrap(~album, ncol= 3, scales = "free" )+
labs(x = NULL,
y = "Sentiment",
title = "Kanye West's songs ranked by sentiment",
caption = "")+
#scale_y_continuous(name = "", limits = c(-100,50))+
theme_minimal()+
theme(axis.text.y = element_text(size = 4.5),
axis.text.x = element_text(size = 4.5),
strip.text = element_text(size = 6)
#axis.
)+
coord_flip()
nrc
library(tidytext)
nrc_2 <- get_sentiments('nrc')
View(nrc_2)
nrc_2
unique(nrc_2$word)
length(unique(nrc_2$word))
length(unique(nrc$word))
nrc%>%distinct()
library(dplyr)
nrc%>%distinct()
bing <- get_sentiments('bing')
View(bing)
nrc <- nrc%>%mutate(sentiment_ == sentiment)
nrc <- nrc%>%mutate(sentiment_ = sentiment)
nrc <- nrc%>%mutate(sentiment_ = 'sentiment')
View(nrc)
nrc
nrc <- get_sentiments('nrc')
nrc
nrc <- nrc%>%
filter(!sentiment %in% c('anticipation', 'surprise'))%>%
mutate(sentiment_ = ifelse(sentiment %in% c("trust","positive","joy"),
"positive", "negative"))%>%
select(-sentiment)%>%
rename(sentiment_ , 'sentiment')
nrc <- nrc%>%
filter(!sentiment %in% c('anticipation', 'surprise'))%>%
mutate(sentiment_ = ifelse(sentiment %in% c("trust","positive","joy"),
"positive", "negative"))%>%
select(-sentiment)%>%
rename(sentiment_ , sentiment)
nrc <- nrc%>%
filter(!sentiment %in% c('anticipation', 'surprise'))%>%
mutate(sentiment_ = ifelse(sentiment %in% c("trust","positive","joy"),
"positive", "negative"))%>%
select(-sentiment)
nrc
nrc <- nrc%>%rename(sentiment_, 'sentiment')
nrc <- nrc%>%rename(sentiment_, sentiment)
nrc <- nrc%>%rename(sentiment_, sentiment)
nrc <- nrc%>%rename(sentiment_ = sentiment)
nrc <- nrc%>%rename('sentiment_' = 'sentiment')
nrc <- nrc%>%rename(sentiment_ = sentiment)
names(nrc)
names(nrc)[names(nrc)== 'sentiment_']
names(nrc)[names(nrc)== 'sentiment_']<- 'sentiment'
nrc
combo <- rbind (nrc, bing)
combo
combo%>%distinct()
combo <- combo%>%distinct()
View(combo)
length(unique(combo$word))
length(unique(combo$sentiment))
length(unique(combo$word))
combo%>%group_by(word, sentiment)
combo%>%group_by(word, sentiment)%>%filter(n()>1)
tr <- tribble(~File,     ~TN,     ~ID,    ~Col1,     ~Col2,
'BAI.txt',   'T',      1,       'sdaf',    'eiri',
'BAJ.txt',   'N',     2,      'fdd',     'fds',
'BBK.txt',   'T',      1,       'ter',     'ase',
'BCD.txt',   'N',      1,       'twe',     'ase')
tr
tr%>%group_by(TN, ID)%>%filter(n()>1)
combo%>%group_by(word, sentiment)%>%filter(n()>1)
combo%>%duplicated()
combo[combo%>%duplicated() == TRUE]
combo[[combo%>%duplicated() == TRUE]]
combo%>%duplicated() == TRUE
combo$word[combo%>%duplicated() == TRUE]
combo$word[combo$word%>%duplicated() == TRUE]
conflict_dupes <- combo$word[combo$word%>%duplicated() == TRUE]
combo%>%anti_join(conflict_dupes)
combo%>%subset(word %in% conflict_dupes)
combo%>%subset(!word %in% conflict_dupes)
combo <- combo%>%subset(!word %in% conflict_dupes)
length(unique(combo))
length(unique(combo$word))
length((combo$word))
ye_combo_sentiment <- tidy_lyrics_tok%>%
left_join(combo)%>%
count(album, track_title, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)%>%
mutate(sentiment_per_word = (positive - negative)/(positive+negative))
library(tidyverse)
ye_combo_sentiment <- tidy_lyrics_tok%>%
left_join(combo)%>%
count(album, track_title, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)%>%
mutate(sentiment_per_word = (positive - negative)/(positive+negative))
View(ye_combo_sentiment)
senti_data<-ye_combo_sentiment%>%
mutate(percent_match= (positive+negative)/(positive+negative+`<NA>`)*100)
View(senti_data)
mean(senti_data$percent_match)
median(senti_data$percent_match)
View(combo)
saveRDS(combo, file = "nrc_bing_vocab.Rds")
View(tidy_lyrics_tok)
tidy_lyrics_tok%>%
filter(album == "808s & Heartbreak", track_n == 11)%>%
left_join(combo)
test_sentiment <- tidy_lyrics_tok%>%
filter(album == "808s & Heartbreak", track_n == 11)%>%
left_join(combo
)
View(test_sentiment)
?sentiments
tidy_lyrics_tok
tidy_lyrics_tok%>%count(album, word)
tidy_lyrics_tok%>%count(album, unique(word))
tidy_lyrics_tok%>%group_by(album)%>%summarise(lex_div = n_distinct(word))
tidy_lyrics_tok%>%
group_by(album)%>%
summarise(lex_dense = n_distinct(word)/n())%>%
arrange(desc(lex_dense))
View(lyrics)
View(lyrics_bigram)
View(lyrics_bigram)
View(lyrics_tok)
lyrics_tok%>%
group_by(album)%>%
summarise(lex_dense = n_distinct(word)/n())%>%
arrange(desc(lex_dense))
lyrics_tok%>%
group_by(album)%>%
summarise(lex_dense = n_distinct(word)/n())%>%
arrange(desc(lex_dense))%>%
ggplot(aes(album, lex_dense), fill=album)%>%
geom_col()
lyrics_tok%>%
group_by(album)%>%
summarise(lex_dense = n_distinct(word)/n())%>%
arrange(desc(lex_dense))%>%
ggplot(aes(album, lex_dense), fill=album)+
geom_col()
lyrics_tok%>%
group_by(album)%>%
summarise(lex_dense = n_distinct(word)/n())%>%
arrange(desc(lex_dense))%>%
ggplot(aes(reorder(album, lex_dense)), fill=album)+
geom_col()
lyrics_tok%>%
group_by(album)%>%
summarise(lex_dense = n_distinct(word)/n())%>%
arrange(desc(lex_dense))%>%
ggplot(aes(reorder(album), lex_dense), fill=album)+
geom_col()
lyrics_tok%>%
group_by(album)%>%
summarise(lex_dense = n_distinct(word)/n())%>%
arrange(desc(lex_dense))%>%
ggplot(aes( x= reorder(album), y=lex_dense), fill=album)+
geom_col()
lyrics_tok%>%
group_by(album)%>%
summarise(lex_dense = n_distinct(word)/n())%>%
arrange(desc(lex_dense))%>%
ggplot(aes( album, lex_dense), fill=album)+
geom_col()
lyrics_tok%>%
group_by(album)%>%
summarise(lex_dense = n_distinct(word)/n())%>%
arrange(desc(lex_dense))%>%
ggplot(aes( album, lex_dense), fill=album)+
geom_col()+
coord_flip()
install.packages('spotifyr')
library(spotifyr)
install.packages('spotifyr')
install.packages(spotifyr)
install.packages('spotifyr')
setRepositories()
install_version("spotifyr", "2.1.1")
library(remotes)
install_version("spotifyr", "2.1.1")
library(spotifyr)
get_my_recently_played(limit = 5)
Sys.setenv(SPOTIFY_CLIENT_ID = 'f2871bb113694d308d1101411f093d0c')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '7b30fc88eac74b2c96903987f648d694')
access_token <- get_spotify_access_token()
get_my_recently_played(limit = 5)
get_my_recently_played(limit = 5)
beatles <- get_artist_audio_features('the beatles')
View(beatles)
View(beatles[[5]][[1]])
get_my_currently_playing()
spotify_ye <- get_artist_audio_features('kanye west')
View(spotify_ye)
unique(spotify_ye$album_name)
View(spotify_ye[[23]][[2]])
View(spotify_ye[[23]][[1]])
View(spotify_ye[[23]][[26]])
spotify_ye%>%filter(tolower(album_name) %in% tolower(kw_albums$album))
library('dplyr')
spotify_ye%>%filter(tolower(album_name) %in% tolower(kw_albums$album))
spotify_ye <- spotify_ye%>%filter(tolower(album_name) %in% tolower(kw_albums$album))
View(spotify_ye)
unique(spotify_ye$album_name)
View(kw_albums)
spotify_ye%>%select(3)
View(spotify_ye[[5]][[1]])
spotify_ye <- spotify_ye%>%select(6,7,9,10,11,12,13,14,15,16,17,18,19,22,23,26,27,30,32,36,37,38,39)
duplicated(spotify_ye)
duplicated(spotify_ye$track_name)
spotify_ye$track_name[duplicated(spotify_ye$track_name)]
spotify_ye%>%distinct(explicit)
spotify_ye%>%distinct(track_name, explicit)
spotify_ye$track_name[duplicated(spotify_ye$track_name)]
spotify_ye%>%filter(track_name %in% spotify_ye$track_name[duplicated(spotify_ye$track_name)] & explicit == 'FALSE')
spotify_ye <- spotify_ye%>%filter(track_name %in% spotify_ye$track_name[duplicated(spotify_ye$track_name)] & explicit == 'FALSE')
spotify_ye$track_name[duplicated(spotify_ye$track_name)]
spotify_ye <- spotify_ye%>%distinct()
spotify_ye$track_name[duplicated(spotify_ye$track_name)]
spotify_ye%>%filter(track_name %in% spotify_ye$track_name[duplicated(spotify_ye$track_name)] & key_name == 'F')
spotify_ye%>%filter(track_name %in% spotify_ye$track_name[duplicated(spotify_ye$track_name)] & !key_name == 'F')
spotify_ye%>%filter(!(track_name %in% spotify_ye$track_name[duplicated(spotify_ye$track_name)] & key_name == 'F'))
spotify_ye%>%filter(track_name == "School Spirit")
spotify_ye%>%filter(!track_name == "School Spirit")
spotify_ye%>%filter(!(track_name == "School Spirit")
)
shiny::runApp()
shiny::runApp()
install.packages("htmltools")
install.packages("htmltools")
View(afd)
View(album_lyrics)
View(bbro)
View(bigram_graph)
shiny::runApp()
source("~/R/kanye/ingest_data.R")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages("Rcpp")
install.packages("Rcpp")
shiny::runApp()
return (
reactive(
if (grepl("album", session$ns("tmp"), fixed = TRUE)){
chart_config %>% filter(albumname== input$varname)
}
else{input$varname}
)
)
getwd()
